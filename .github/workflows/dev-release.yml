name: Dev Deploy

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: [self-hosted, linux]
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup PM2 and manage processes
        run: |
          echo "Checking PM2 availability..."
          if command -v pm2 &> /dev/null; then
            echo "‚úÖ PM2 is already available: $(pm2 --version)"
          else
            echo "Installing PM2 globally..."
            # Try multiple installation methods
            npm install -g pm2 --unsafe-perm --silent || {
              echo "First attempt failed, trying alternative method..."
              npm install -g pm2 --force --silent || {
                echo "Second attempt failed, trying with sudo..."
                sudo npm install -g pm2 --unsafe-perm --silent || {
                  echo "‚ö†Ô∏è All PM2 install attempts failed, but continuing..."
                }
              }
            }
          fi

          # Ensure PM2 is in PATH
          export PATH=$PATH:/usr/local/bin:/usr/bin:/home/ubuntu/.npm-global/bin

          echo "Managing PM2 processes..."
          pm2 stop all || true
          pm2 delete all || true
          pm2 flush || true
        timeout-minutes: 3

      - name: Install dependencies
        run: |
          echo "Setting npm configuration for better reliability..."
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set fetch-retries 5
          npm config set registry https://registry.npmjs.org/

          echo "Installing dependencies with retries..."
          for i in {1..3}; do
            echo "Attempt $i of 3..."
            if npm ci --prefer-offline --no-optional; then
              echo "‚úÖ Dependencies installed successfully!"
              break
            elif [ $i -eq 3 ]; then
              echo "‚ùå Failed after 3 attempts, trying full clean install..."
              rm -rf node_modules package-lock.json
              npm install --no-optional --prefer-offline
            else
              echo "‚ö†Ô∏è Attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
        timeout-minutes: 10

      - name: Verify dependencies
        run: |
          echo "Verifying installed packages..."
          npm list --depth=0 || echo "Some packages may have issues, but continuing..."
          echo "Checking critical dependencies..."
          node -e "console.log('‚úÖ Node.js is working')"
          node -e "require('express'); console.log('‚úÖ Express is available')"
          node -e "require('mysql2'); console.log('‚úÖ MySQL2 is available')"
          node -e "require('dotenv'); console.log('‚úÖ Dotenv is available')"
        timeout-minutes: 2

      - name: Setup environment file
        run: |
          touch .env
          echo "${{ secrets.DMS_ENV }}" > .env

      - name: Check environment
        run: |
          printenv HOME
          pm2 list
          pm2 flush

      - name: Deploy with PM2
        run: |
          echo "Starting deployment..."

          # Ensure PM2 is available
          export PATH=$PATH:/usr/local/bin:/usr/bin:/home/ubuntu/.npm-global/bin

          # Clean up existing processes
          pm2 delete all || true

          # Start the application with error handling
          if pm2 start app.js --name DMS-BE; then
            echo "‚úÖ PM2 started successfully"
            pm2 save || true
            sleep 5
            pm2 list || true
          else
            echo "‚ùå PM2 start failed, trying direct node startup..."
            # Fallback: kill any existing node processes and start fresh
            pkill -f "node.*app.js" || true
            sleep 2
            nohup node app.js > app.log 2>&1 &
            sleep 3
            echo "‚úÖ Application started with node directly"
            # Try to add to PM2 if possible
            pm2 start app.js --name DMS-BE || echo "‚ö†Ô∏è Could not add to PM2, but app is running"
          fi
        timeout-minutes: 3

      - name: Verify deployment
        run: |
          echo "Waiting for application to start..."
          sleep 15
          echo "Checking PM2 status..."
          pm2 list
          echo "Testing application health..."

          # Quick health check without hanging
          if curl -f -s http://localhost:3000/health; then
            echo ""
            echo "‚úÖ Application health check passed!"
          elif netstat -tlnp | grep :3000; then
            echo "‚úÖ Application is listening on port 3000!"
          else
            echo "‚ùå Application not responding"
            exit 1
          fi

          echo "üéâ Deployment completed successfully!"
        timeout-minutes: 2
