name: Dev Deploy

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: [self-hosted, linux]
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install global packages and manage PM2
        run: |
          echo "Installing PM2 globally with retries..."
          npm install -g pm2 --silent --no-optional || npm install -g pm2 --silent --force
          echo "Stopping existing PM2 processes..."
          pm2 stop all || true
          pm2 delete all || true
        timeout-minutes: 5

      - name: Install dependencies
        run: |
          echo "Setting npm configuration for better reliability..."
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set fetch-retries 5
          npm config set registry https://registry.npmjs.org/
          
          echo "Installing dependencies with retries..."
          for i in {1..3}; do
            echo "Attempt $i of 3..."
            if npm ci --prefer-offline --no-optional; then
              echo "✅ Dependencies installed successfully!"
              break
            elif [ $i -eq 3 ]; then
              echo "❌ Failed after 3 attempts, trying full clean install..."
              rm -rf node_modules package-lock.json
              npm install --no-optional --prefer-offline
            else
              echo "⚠️ Attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
        timeout-minutes: 10

      - name: Verify dependencies
        run: |
          echo "Verifying installed packages..."
          npm list --depth=0 || echo "Some packages may have issues, but continuing..."
          echo "Checking critical dependencies..."
          node -e "console.log('✅ Node.js is working')"
          node -e "require('express'); console.log('✅ Express is available')"
          node -e "require('mysql2'); console.log('✅ MySQL2 is available')"
          node -e "require('dotenv'); console.log('✅ Dotenv is available')"
        timeout-minutes: 2

      - name: Setup environment file
        run: |
          touch .env
          echo "${{ secrets.DMS_ENV }}" > .env

      - name: Check environment
        run: |
          printenv HOME
          pm2 list
          pm2 flush

      - name: Deploy with PM2
        run: |
          pm2 delete all || true
          pm2 start app.js --name DMS-BE
          pm2 save
          sleep 5
          pm2 list
          pm2 logs DMS-BE --lines 10
        timeout-minutes: 3

      - name: Verify deployment
        run: |
          echo "Waiting for application to start..."
          sleep 15
          echo "Checking PM2 status..."
          pm2 list
          echo "Checking application logs for errors..."
          pm2 logs DMS-BE --lines 5 --nostream
          echo "Testing if application is responding on port 3000..."
          curl -f http://localhost:3000/initadmin/ifasapp || (echo "❌ Application not responding" && pm2 logs DMS-BE --lines 20 --nostream && exit 1)
          echo "✅ Application is running and responding!"
        timeout-minutes: 3
